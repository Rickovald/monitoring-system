services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: monitoring_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "monitoring_system" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=monitoring_system;Username=postgres;Password=postgres
    ports:
      - "5177:8080"

  sensor_emulator:
    build:
      context: .
      dockerfile: sensor-emulator/Dockerfile
    container_name: sensor_emulator
    restart: always
    depends_on:
      - backend
    environment:
      - BASE_URL=http://host.docker.internal:5177

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"

volumes:
  pgdata:
